#include "includes/libft.h"
//#include <unistd.h>
//#include <stdlib.h>
//#include <time.h>

/*void	int_merge_sort(int *tab, int count);

int	main()
{
	int	*tab;
	int	i;
	int j;

	j = 0;
	tab = (int*)malloc(sizeof(int) * 10000);
	i = 0;
	srand(time(NULL));
	while (j <= 10000)
	{
		tab[j] = rand();
		j++;
	}
	int_merge_sort(tab, 10000);
	while (i < 10000)
	{
		ft_putnbr(tab[i]);
		ft_putchar('\n');
		if (tab[i] > tab[i+1] && i + i <= 10000)
		ft_putendl("NOPE");
		i++;
	}
	return (0);
}*/

int main(void)
{
	char		**s;
	int i = 0;

	s = ft_strsplit("We can extend this idea to longer sequences of letters. The order-2 text was made by generating each letter as a function of the two letters preceding it (a letter pair is often called a digram). The digram TH, for instance, is often followed in English by the vowels A, E, I, O, U and Y, less frequently by R and W, and rarely by other letters. The order-3 text is built by choosing the next letter as a function of the three previous letters (a trigram). By the time we get to the order-4 text, most words are English, and you might not be surprised to learn that it was generated from a Sherlock Holmes story (``The Adventure of Abbey Grange''). A classically educated reader of a draft of this column commented that this sequence of fragments reminded him of the evolution from Old English to Victorian English.", ' ');
	while (i < 55)
	{
		ft_putendl(s[i]);
		i++;
	}
	s = char_sort(s, 55);
	ft_putchar('\n');
	i = 0;
	while (i < 55)
	{
		ft_putendl(s[i]);
		i++;
	}
	return 0;
}
